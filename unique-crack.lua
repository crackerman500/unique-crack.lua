-- This file was generated using Luraph Obfuscator v13.5.6

return(function(lu,Mu,du,pu,cu,Qu,gu,Ju,ou,ju,Du,wu,hu,zu,Iu,su,Lu,Au,Rl,bu,Bu,Pu,Eu,ku,Nu,qu,vu,ru,Vu,yu,Wu,Sl,Hu,Tu,mu,uu,xu,Ou,Gu,fu,eu,Ku,au,S,...)local C,G,t=pcall,nil,(nil);local X=select;for bw=0X0,1 do if bw==0 then do G=Tu.yield;end;else t=Au;end;end;local nl,Cu,R=1,nil,nil;while nl<2 do if nl==0 then do R=Eu;end;nl=2;else Cu={};nl=0;end;end;local Y,Z,A=type,nil,nil;for b0=0X0000,1 do if b0==0X0 then Z=Wu;else A=Pu;end;end;local d=1;nl=0X2;local W,s,T=nil,nil,nil;while nl<=0X0002 do if nl<=0X0 then do s=yu;end;do nl=1;end;elseif nl~=1 then W=su;do nl=0X0;end;else T=gu.char;nl=3;end;end;local h,b,u,N=hu,2^0X34,(bit or bit32),(unpack or Gu);local g=(Ju);do nl=0X000;end;local K,m,U=nil,nil,nil;repeat do if nl<=1 then if nl~=0x0 then break;else K={[0X0]={[0]=Nu,0X1,2,0X0003,4,0X00005,0X0006,0X00007,0X8,9,0Xa,xu,0Xc,0XD,0XE,ou},{[0]=0X1,0X0,3,0x2,cu,0x00004,0X7,6,0X009,8,0Xb,0X0A,13,12,15,0x00E},{[0]=2,0x03,0,0X00001,0x6,7,4,5,10,0X000B,8,9,0X0000E,0xF,0X000c,0X0000d},{[0]=3,2,0x1,0,du,6,5,0X004,0Xb,10,9,0X8,0XF,14,0x0000d,12},{[0]=0x04,cu,6,0X7,0,1,0X02,0X0003,0XC,13,0X00E,0Xf,0X0008,0X9,10,11},{[0X0]=5,ku,0X7,0x06,1,0,0X00003,0X00002,13,0X0000C,15,0Xe,9,0X08,xu,0xA},{[0]=0X6,7,ku,0X00005,2,3,0X000,Qu,zu,15,0XC,0XD,Bu,0X00b,0X08,9},{[0]=0X7,6,0X005,ku,3,0X2,0X00001,0X0,15,14,13,12,11,0X0000a,0X00009,0X008},{[0]=8,0X9,0X00A,0X00b,12,13,14,15,0,0x1,2,3,0X4,0X0005,0X006,du},{[0]=9,0X8,0X00B,10,13,12,0X00F,0XE,1,0,0x3,wu,0X0005,0x4,du,0x6},{[0X0]=10,11,0X8,0X9,14,15,pu,13,2,3,0X0000,1,0x00006,0X7,ku,0X05},{[Nu]=11,0X0000A,9,0x8,0XF,0x00E,bu,12,3,0x0002,1,0,du,0X6,5,0X4},{[0X0]=pu,0Xd,0Xe,ou,8,9,0xa,11,4,0x0005,6,0X007,0,0X001,2,3},{[0X0]=bu,12,0x0000f,0x00e,0X9,0x08,11,10,5,0X004,7,0x006,0X1,0x000,0X3,2},{[0X0000]=14,0XF,12,13,0X000a,11,fu,0X9,6,0X7,0X00004,cu,0X002,0X00003,0X0,1},{[0X00000]=15,0xE,0XD,pu,0XB,10,0X09,0X8,0X7,0X6,5,4,0X3,2,0x1,0}};nl=0X2;end;else do if nl~=2 then U=eu;nl=1;else do m={6,0X7,4};end;nl=0X3;end;end;end;end;until false;local o,c,E,k=getfenv,nil,nil,nil;for yV=0,0x3 do if yV<=0x1 then if yV~=0X00 then else c=(o and o()or lu);end;else if yV~=0X02 then kelse do E=vu;end;end;end;end;local F=(Lu);local Uu=function(...)do return X(qu,...),{...};end;end;local Q,w,z=nil,nil,(nil);do for VY=0X0000,2 do if VY<=0X0000 then k=E(F(k,5),Ku,function(hX)if Z(hX,0x02)~=72 then local Bo,Qo=1,(nil);repeat if Bo~=0 then Qo=T(U(hX,16));do Bo=0x0;end;else do if Q then local R9=A(Qo,Q);for vz=0,1 do do if vz~=0X000 then do return R9;end;else Q=nil;end;end;end;else return Qo;end;end;Bo=0X2;end;until Bo==2;else local Bc=(0);while true do if Bc==0X0 then Q=U(F(hX,1,0X01));Bc=1;else return'';end;end;end;end);else if VY~=0X0001 then z=function()local lf=(Z(k,d,d));d=d+1;return lf;end;else do w=2147483648;end;end;end;end;end;do nl=0x0;end;local B,p=nil,(nil);repeat if nl==0 then B=function()local Tv,uv,wv,av,bv=0X0001,nil,nil,nil,nil;do repeat if Tv<=0 then d=d+4;Tv=2;else if Tv~=1 then return bv*16777216+av*uu+wv*256+uv;else uv,wv,av,bv=Z(k,d,d+0X0003);Tv=0X000;end;end;until false;end;end;do nl=1;end;else p=0X100000000;nl=2;end;until nl==0X2;local f=(p-0X001);local e=(w-1);local l=({[0]=1});do local MM=2;for mE=1,0X0001f do local sE=0X1;do while sE<=0X01 do if sE==0x000 then MM=MM*2;do sE=0X002;end;else do l[mE]=MM;end;sE=0;end;end;end;end;end;local v=(function(YS,uS,LS)local AS=nil;local hS=(0);repeat do if hS~=0X0 then AS=AS-AS%0X1;hS=0X2;else AS=(YS/l[uS])%l[LS];do hS=1;end;end;end;until hS>=2;do return AS;end;end);local L=(function()local Gl,Wl=nil,nil;do for Gt=0,0X01 do if Gt~=0 then if not(Wl>=w)then else do Wl=Wl-p;end;end;else Gl,Wl=B(),B();end;end;end;do return Wl*p+Gl;end;end);local tu=({});local i=error;local q=(function()local Yd=(B());local pd=(B());if Yd==0 and pd==0 then return 0X0;end;local ld=((-1)^v(pd,31,1));local nd=v(pd,0X14,0X00b);local id,Hd=nil,(nil);for x4=0,3 do if x4<=1 then if x4~=0 then Hd=v(pd,0,20)*p+Yd;else id=1;end;else if x4==0X2 then if nd==0x000 then if Hd~=0X0 then do for TI=0,0X1 do do if TI==0X0 then nd=0X00001;else id=0;end;end;end;end;else do return ld*0x0;end;end;elseif nd~=0X007ff then else if Hd~=0 then return ld*(0x0001/Nu);else return ld*(0/0);end;end;else do return ld*(0X2^(nd-1023))*(Hd/b+id);end;end;end;end;end);local H=u and u[Hu]or function(ZR,NR)local gR,MR,wR=0x00000,nil,nil;repeat do if gR<=1 then if gR~=0 then wR=1;gR=4;else ZR=ZR%p;gR=0X2;end;else if gR==2 then MR=0x000;gR=3;else NR=NR%p;gR=1;end;end;end;until gR>0X003;for ng=0,0X00001 do if ng==0 then while ZR>0 and NR>0x0 do local eD,wD=nil,nil;for TQ=0,1 do if TQ~=0X0 then wD=NR%16;else eD=ZR%0X10;end;end;for q9=0,2 do do if not(q9<=0X0)then if q9~=1 then do NR=(NR-wD)/16;end;else ZR=(ZR-eD)/0X10;end;else do MR=MR+K[eD][wD]*wR;end;end;end;end;wR=wR*16;end;else return MR+ZR*wR+NR*wR;end;end;end;local I=(u and u[Iu]or function(Hl,el)local Ml=0;do repeat if Ml==0 then Hl=Hl%p;Ml=0X00001;else el=el%p;Ml=0X2;end;until Ml>=0X0002;end;return((Hl+el)-H(Hl,el))/0X02;end);local O=u and u.bor or function(aL,XL)local EL=(0X0);repeat if not(EL<=0X000)then if EL==1 then XL=XL%p;EL=0X0002;else do return f-I(f-aL,f-XL);end;end;else aL=aL%p;EL=1;end;until false;end;local M,D,P,a,J=u and u[Ou]or function(Z8)return f-(Z8%p);end,nil,nil,nil,nil;for V7=0,0X4 do if not(V7<=1)then if V7<=2 then a=u and u.rshift;elseif V7~=3 then D=D or function(bV,DV)if not(DV>=0X20)then else return 0X0;end;if DV<0X0 then return a(bV,-DV);end;return(bV*l[DV])%p;end;else J=Du;end;else if V7~=0 then P=Mu;else D=u and u.lshift;end;end;end;a=a or function(m8,S8)local X8,N8=0X01,nil;do while true do if X8<=0x1 then if X8==0 then N8=(m8%p/l[S8]);X8=0X03;else do if S8>=32 then return 0;end;end;X8=0X02;end;else if X8~=0x2 then return N8-N8%0X1;else if not(S8<Nu)then else return D(m8,-S8);end;do X8=0X0;end;end;end;end;end;end;local r=function()local tn=0X0;local sn=0;while-0X000044a11Fd3 do local fh=(Z(k,d,d));do d=d+1;end;tn=O(tn,D(I(fh,0X7f),sn));if I(fh,128)~=0X0 then else return tn;end;sn=sn+0X07;end;end;local j=({[1]=0x0007,[6]=2,[0x00008]=6,[2]=0X3,[5]=0x00009,[0X4]=0X1,[1]=Nu,[au]=2,[du]=au,[0X9]=0X1,[1]=0x1});local V=function()local Rw=(1);local hw=(nil);do while-0X542789aD do if not(Rw<=0)then if Rw~=0X1 then if not(hw>e)then else return hw-p;end;Rw=0X00000;else hw=r();Rw=2;end;else return hw;end;end;end;end;local Su=z();local Ru=z();local nu=function(Ng)local lg={Z(k,d,d+3)};local gg=H(lg[0X1],Ru);local tg=(H(lg[2],Ru));local Bg=H(lg[3],Ru);local jg=(H(lg[4],Ru));for mh=0,2 do if mh<=0x0 then Ru=(77*Ru+Ng)%0X100;else if mh==0X001 then d=d+0X4;else do return jg*0X001000000+Bg*0X10000+tg*256+gg;end;end;end;end;end;local Xu=function(u7)local w7,O7=nil,nil;for bN=0,0X2 do do if bN<=0X0 then do w7=B();end;else if bN~=0X1 then for jt=0X01,w7,7997 do local ct,Jt,zt=0,nil,(nil);do while ct~=0X005 do if not(ct<=0X001)then do if ct<=2 then for SJ=0x0001,#zt do local YJ=1;while YJ<0x2 do if YJ==0 then Su=(u7*Su+0xC7)%mu;do YJ=2;end;else zt[SJ]=H(zt[SJ],Su);YJ=0;end;end;end;ct=0X4;else if ct==0X3 then zt={Z(k,d+jt-0X01,d+Jt-0X001)};ct=0X2;else O7=O7..T(N(zt));ct=0X5;end;end;end;else if ct~=0 then do if Jt>w7 then Jt=w7;end;end;ct=0x3;else Jt=jt+7997-0X001;ct=1;end;end;end;end;end;else O7="";end;end;end;end;do for Tx=0,0X1 do if Tx~=0 then return O7;else do d=d+w7;end;end;end;end;end;local x,Yu,iu,Fu,Zu=setfenv,nil,nil,nil,nil;for b1=0X00,4 do if not(b1<=0X1)then do if b1<=2 then function iu(XT,aT,mT)local OT=(XT[0x5]);local WT=XT[8];local vT,KT,dT=XT[9],XT[0X00001],XT[4];local kT=XT[6];local hT=(XT[2]);local HT=XT[7];local sT=s({},{__mode="v"});local fT=(nil);fT=function(...)local Sq={};local Wq=(0X0);local jq=((o and o()or _ENV));local lq={[2]=XT,[1]=Sq};local Cq,Vq=Uu(...);Cq=Cq-0x001;do for Db=0X0,Cq do if not(OT>Db)then break;else Sq[Db]=Vq[Db+1];end;end;end;local Uq=((jq==c and aT or jq));if not dT then Vq=nil;elseif HT then Sq[OT]={n=Cq>=OT and Cq-OT+0X1 or 0,N(Vq,OT+1,Cq+1)};end;local oq=1;if Uq==jq then else if x then x(fT,Uq);else _ENV=Uq;end;end;local cq,Bq,Zq,Jq=C(function()while true do local gi=hT[oq];local ai=(gi[0x5]);oq=oq+1;if ai>=46 then if ai<69 then if not(ai>=0x39)then do if ai<51 then if ai<0X30 then if ai~=47 then local Ly=gi[0X4];(Sq[Ly])(Sq[Ly+1],Sq[Ly+0X0002]);Wq=Ly-0X1;else if not(Sq[gi[7]]<=Sq[gi[6]])then oq=gi[0X4];end;end;else if ai>=49 then if ai==0x32 then do(Sq)[gi[4]]=Sq[gi[7]]%gi[2];end;else do Sq[gi[4]][gi[0x3]]=Sq[gi[0X0006]];end;end;else if gi[6]==206 then oq=oq-0X1;(hT)[oq]={[0X00007]=(gi[0X7]-74),[4]=(gi[0x0004]-74),[0X005]=0X00026};else if not(Sq[gi[4]])then else oq=gi[7];end;end;end;end;else do if ai>=0X36 then if not(ai>=55)then Wq=gi[4];Sq[Wq]=Sq[Wq]();else if ai==0X0038 then repeat local Qy,sy=sT,(Sq);if not(#Qy>0X000)then else local Wt={};for aO,fO in J,Qy do for dN,aN in J,fO do if aN[1]==sy and aN[0X002]>=0 then local dZ=aN[0X2];if not Wt[dZ]then(Wt)[dZ]={sy[dZ]};end;aN[0x00001]=Wt[dZ];(aN)[2]=1;end;end;end;end;until true;return true,gi[0X04],1;else local K0=(gi[0X00004]);Wq=K0+gi[0X07]-0X0001;Sq[K0](N(Sq,K0+1,Wq));Wq=K0-1;end;end;else if ai<52 then if gi[6]~=0x00055 then local PY,CY=gi[0X4],Cq-OT;if not(CY<0X0)then else CY=-0X1;end;do for O3=PY,PY+CY do(Sq)[O3]=Vq[OT+(O3-PY)+1];end;end;do Wq=PY+CY;end;else do oq=oq-0X0001;end;(hT)[oq]={[0X5]=0x45,[7]=(gi[7]-98),[0x4]=(gi[0x4]-0X62)};end;else if ai~=0x0035 then local Ql=kT[gi[0X7]];local yl=(nil);local Ml=Ql[0x0003];local Ul=(#Ml);if not(Ul>0)then else yl={};for XC=1,Ul do local GC=(Ml[XC]);if GC[1]~=0X00000 then(yl)[XC-1]=mT[GC[2]];else yl[XC-0X0001]={Sq,GC[2]};end;end;P(sT,yl);end;do Sq[gi[0X00004]]=iu(Ql,Uq,yl);end;else Sq[gi[0x4]]=Sq[gi[0X0007]][gi[2]];end;end;end;end;end;end;else if not(ai>=0X3f)then if not(ai>=60)then if ai>=0x03a then do if ai~=59 then(Sq)[gi[0X4]]=Sq[gi[0X0007]]~=gi[0X2];else local IL=(Sq[gi[0x7]]/Sq[gi[0X6]]);(Sq)[gi[0X04]]=IL-IL%1;end;end;else(Sq)[gi[0X4]]=Sq[gi[7]]%Sq[gi[0X6]];end;else if ai<61 then(Sq)[gi[4]]=Sq[gi[7]]>=Sq[gi[0X6]];else if ai==62 then do if not(not(Sq[gi[0X07]]<Sq[gi[0x0006]]))then else oq=gi[4];end;end;else do repeat local Uf,Zf=sT,(Sq);if#Uf>0 then local Zb={};for jE,hE in J,Uf do do for e2,m2 in J,hE do if not(m2[1]==Zf and m2[2]>=0)then else local ZW=(m2[2]);if not Zb[ZW]then do(Zb)[ZW]={Zf[ZW]};end;end;do m2[1]=Zb[ZW];end;(m2)[2]=1;end;end;end;end;end;until true;end;return true,gi[4],0;end;end;end;else if not(ai<66)then if not(ai<67)then if ai~=0X00044 then do(Sq)[gi[0X0004]]=Sq[gi[0X7]];end;else local Rg=gi[7];local sg=Sq[Rg];for MG=Rg+1,gi[6]do do sg=sg..Sq[MG];end;end;do(Sq)[gi[0X4]]=sg;end;end;else if gi[0x0006]~=15 then for VT=gi[4],gi[7]do do(Sq)[VT]=nil;end;end;else oq=oq-0X1;hT[oq]={[4]=(gi[0x4]-0X98),[0X007]=(gi[0x7]-0X98),[5]=7};end;end;else do if not(ai>=0X000040)then local ia=gi[0X0004];do(Sq)[ia]=Sq[ia](Sq[ia+0X0001],Sq[ia+0X00002]);end;Wq=ia;else if ai~=0X41 then Sq[gi[0X0004]]=Sq[gi[7]][Sq[gi[6]]];else Sq[gi[0X4]]={};end;end;end;end;end;end;else if not(ai<0x000051)then if not(ai<87)then if ai<0X5a then if ai<0X58 then(Sq)[gi[0X0004]]=Sq[gi[0X7]]^Sq[gi[0X6]];else if ai==89 then if not(not(Sq[gi[7]]<=gi[0x2]))then else oq=gi[4];end;else repeat local S1,J1=sT,(Sq);if not(#S1>0)then else local d1=({});for oi,ti in J,S1 do do for yq,qq in J,ti do do if not(qq[1]==J1 and qq[0X2]>=0)then else local ak=(qq[2]);do if not d1[ak]then d1[ak]={J1[ak]};end;end;qq[1]=d1[ak];(qq)[0X2]=1;end;end;end;end;end;end;until true;local vZ=(gi[0X0004]);do return false,vZ,vZ+gi[0X7]-2;end;end;end;else if not(ai<91)then if ai==92 then do(Sq)[gi[4]]=Sq[gi[0X0007]]-Sq[gi[6]];end;else(Sq)[gi[4]]=M(Sq[gi[0X0007]]);end;else Sq[gi[0X4]]=gi[3];end;end;else if not(ai>=0x54)then if ai>=0X52 then do if ai==83 then local GT=(gi[0X4]);local gT=(h(function(...)G();for Nr in...do(G)(true,Nr);end;end));(gT)(Sq[GT],Sq[GT+1],Sq[GT+2]);Wq=GT;Sq[GT]=gT;oq=gi[0x007];else Sq[gi[4]][Sq[gi[7]]]=gi[0X02];end;end;else local kR=(gi[0X0004]);do Sq[kR]=Sq[kR](N(Sq,kR+0X001,Wq));end;Wq=kR;end;else if not(ai<0x55)then if ai==0X00056 then local tQ=(gi[4]);local HQ=Sq[tQ];local dQ=(gi[6]-1)*0X032;for b2=0x1,Wq-tQ do do(HQ)[dQ+b2]=Sq[tQ+b2];end;end;else if gi[0x06]~=22 then repeat local I3,Z3=sT,(Sq);do if#I3>0x0 then local ya={};for A8,D8 in J,I3 do do for ds,xs in J,D8 do do if not(xs[1]==Z3 and xs[0X02]>=0)then else local Fc=xs[0X2];if not(not ya[Fc])then else ya[Fc]={Z3[Fc]};end;xs[1]=ya[Fc];(xs)[0X2]=1;end;end;end;end;end;end;end;until true;return;else oq=oq-1;hT[oq]={[0x5]=51,[0x004]=(gi[0X04]-122),[7]=(gi[7]-0X0007A)};end;end;else do(Sq)[gi[0x4]]=Sq[gi[0X7]]<=Sq[gi[6]];end;end;end;end;else do if ai>=75 then do if ai>=78 then if not(ai<79)then if ai~=0X50 then local Fi=(gi[0X4]);(Sq)[Fi]=Sq[Fi](Sq[Fi+1]);do Wq=Fi;end;else do(Sq)[gi[0X00004]]=lq[gi[0X7]];end;end;else(Uq)[gi[0X003]]=Sq[gi[0X4]];end;else if ai>=76 then do if ai~=77 then if Sq[gi[0X7]]~=Sq[gi[0X6]]then else do oq=gi[0X4];end;end;else lq[gi[7]]=Sq[gi[0X4]];end;end;else Sq[gi[4]]=Sq[gi[0X7]]+Sq[gi[6]];end;end;end;else if ai>=72 then do if ai>=73 then if ai~=74 then Sq[gi[4]]=Sq[gi[7]]==Sq[gi[0x6]];else Sq[gi[4]][gi[0X3]]=gi[2];end;else local mC=(gi[0X00004]);local tC,uC=Sq[mC],((gi[0X00006]-1)*50);do for Q3=1,gi[7]do tC[uC+Q3]=Sq[mC+Q3];end;end;end;end;else if ai<0X00046 then do Sq[gi[0X4]]=nil;end;else do if ai~=71 then(Sq)[gi[4]]=Sq[gi[7]]~=Sq[gi[0X6]];else(Sq)[gi[4]]=D(Sq[gi[7]],Sq[gi[6]]);end;end;end;end;end;end;end;end;else if not(ai>=23)then if not(ai<0X0000b)then do if not(ai>=17)then if not(ai<14)then if ai>=0XF then if ai==16 then(Sq)[gi[4]]=I(Sq[gi[7]],Sq[gi[6]]);else local Nl=(gi[4]);(Sq[Nl])(Sq[Nl+0X1]);Wq=Nl-1;end;else Wq=gi[0x004];(Sq[Wq])();Wq=Wq-0x1;end;else do if not(ai>=12)then do if not(Sq[gi[0X7]]<=Sq[gi[6]])then else do oq=gi[0X4];end;end;end;else if ai~=0X000d then local sm=(gi[0X04]);do Wq=sm+gi[7]-1;end;(Sq)[sm]=Sq[sm](N(Sq,sm+1,Wq));Wq=sm;else do Sq[gi[4]]=Sq[gi[0x07]]>Sq[gi[0X006]];end;end;end;end;end;else if ai<20 then if not(ai<18)then if ai~=0X13 then local rX=(gi[7]);(Sq)[gi[4]]=Sq[rX]..Sq[rX+0X1];else do tu[gi[7]]=Sq[gi[0X4]];end;end;else local xp=(gi[0X0004]);local Hp=h(function(...)(G)();do for Xm,Gm in...do(G)(true,Xm,Gm);end;end;end);(Hp)(Sq[xp],Sq[xp+0x1],Sq[xp+0X2]);Wq=xp;do Sq[xp]=Hp;end;do oq=gi[0X7];end;end;else if not(ai<21)then do if ai==0X00016 then(Sq)[gi[4]]=Uq[gi[3]];else do(Sq)[gi[0x4]]=not Sq[gi[0X00007]];end;end;end;else Sq[gi[0x0004]]=Sq[gi[7]]/Sq[gi[6]];end;end;end;end;else if ai>=5 then if ai>=8 then do if not(ai>=9)then Sq[gi[4]]={N({},0X00001,gi[7])};else if ai~=10 then do if Sq[gi[0X007]]~=gi[2]then oq=gi[0x04];end;end;else Sq[gi[0X4]]=H(Sq[gi[7]],Sq[gi[6]]);end;end;end;else if ai<0X6 then Sq[gi[4]]=false;else if ai==7 then do(Sq)[gi[4]]=-Sq[gi[7]];end;else do(Sq)[gi[0X00004]]=O(Sq[gi[0X0007]],Sq[gi[6]]);end;end;end;end;else if ai>=2 then if not(ai>=0x3)then local jG=gi[4];local iG,UG=Sq[jG]();if not(iG)then else do oq=gi[7];end;Sq[jG+0X03]=UG;end;else if ai==0X4 then do oq=gi[7];end;else if gi[6]~=136 then Sq[gi[4]]=#Sq[gi[0X00007]];else oq=oq-0x0001;hT[oq]={[4]=(gi[0X0004]-82),[5]=88,[7]=(gi[0X0007]-0x52)};end;end;end;else if ai==0X001 then repeat local k2,w2,V2=sT,Sq,(gi[4]);do if not(#k2>0)then else local Ve={};for fg,Hg in J,k2 do for FB,AB in J,Hg do if AB[0x1]==w2 and AB[2]>=V2 then local iO=(AB[0X2]);if not(not Ve[iO])then else Ve[iO]={w2[iO]};end;AB[0x1]=Ve[iO];AB[0X02]=1;end;end;end;end;end;until true;else if gi[0X6]==83 then oq=oq-0X0001;hT[oq]={[5]=3,[7]=(gi[0X07]-0X64),[4]=(gi[4]-0x64)};else Sq[gi[0X00004]]=Vq[OT+0X001];end;end;end;end;end;else do if ai<34 then do if not(ai<0x01c)then do if ai>=31 then if not(ai<32)then do if ai==33 then Sq[gi[4]]=Sq[gi[0x7]]*Sq[gi[6]];else do if Sq[gi[0x7]]~=Sq[gi[6]]then do oq=gi[4];end;end;end;end;end;else do Sq[gi[4]]=gi[0X003];end;end;else if not(ai<0x001D)then do if ai~=30 then(Sq)[gi[4]]=a(Sq[gi[0X7]],Sq[gi[0X6]]);else(Sq)[gi[4]]=tu[gi[0X7]];end;end;else local Dv=(gi[0X4]);local zv=(Sq[Dv+2]);local av,Zv=Sq[Dv],(Sq[Dv+1]);do(Sq)[Dv]=h(function()for jd=av,Zv,zv do(G)(true,jd);end;end);end;oq=gi[0X7];end;end;end;else if not(ai>=0x019)then if ai~=0x18 then do Sq[gi[4]][Sq[gi[0X7]]]=Sq[gi[6]];end;else do Sq[gi[4]]=true;end;end;else if ai>=26 then if ai~=27 then local fY=gi[0X4];local JY,tY=Sq[fY]();do if not(JY)then else for tG=1,gi[6]do do(Sq)[fY+tG]=tY[tG];end;end;do oq=gi[7];end;end;end;else local QF=(gi[4]);local zF=(h(function(...)(G)();for LC,sC,HC,lC,GC,QC,XC,xC,SC,vC in...do G(true,{LC,sC,HC,lC,GC,QC,XC,xC,SC,vC});end;end));zF(Sq[QF],Sq[QF+1],Sq[QF+2]);do Wq=QF;end;Sq[QF]=zF;oq=gi[0X7];end;else local Gx=(gi[0x0004]);local ex,Sx=Sq[Gx]();if ex then do Sq[Gx+1]=Sx;end;oq=gi[7];end;end;end;end;end;else if not(ai>=0X28)then if not(ai<37)then do if not(ai>=38)then local wK=gi[0x4];(Sq[wK])(N(Sq,wK+1,Wq));Wq=wK-1;else if ai~=0X027 then repeat local RL,DL=sT,Sq;if not(#RL>0X0)then else local QM={};for PT,BT in J,RL do for C0,o0 in J,BT do do if not(o0[1]==DL and o0[2]>=0)then else local SX=(o0[2]);if not(not QM[SX])then else QM[SX]={DL[SX]};end;o0[1]=QM[SX];o0[0X0002]=0X0001;end;end;end;end;end;until true;return false,gi[0X00004],Wq;else if Sq[gi[0X07]]==gi[2]then oq=gi[0X004];end;end;end;end;else if not(ai>=0X0023)then local cm,rm=gi[4],Sq[gi[0x007]];(Sq)[cm+1]=rm;Sq[cm]=rm[gi[2]];else if ai==0X00024 then Sq[gi[4]]=Sq[gi[7]]/gi[2];else Sq[gi[0X4]]=Sq[gi[7]]<Sq[gi[0X006]];end;end;end;else if not(ai>=43)then if ai<0X000029 then if not Sq[gi[0X004]]then oq=gi[7];end;else if ai==42 then local HJ=(mT[gi[7]]);Sq[gi[0X04]]=HJ[1][HJ[2]];else if Sq[gi[0X007]]<Sq[gi[6]]then oq=gi[0x4];end;end;end;else if ai<44 then local lX=gi[4];local wX,eX,EX=Sq[lX]();if wX then Sq[lX+0X1]=eX;Sq[lX+2]=EX;oq=gi[0X00007];end;else if ai==0x02d then local NN,yN=gi[4],(gi[7]);local FN=gi[0x6];do if yN==0 then else Wq=NN+yN-0X1;end;end;local MN,HN=nil,(nil);if yN==0X1 then do MN,HN=Uu(Sq[NN]());end;else MN,HN=Uu(Sq[NN](N(Sq,NN+0X0001,Wq)));end;if FN==1 then do Wq=NN-1;end;else if FN==0 then do MN=MN+NN-1;end;Wq=MN;else do MN=NN+FN-2;end;do Wq=MN+0X1;end;end;local q_=(0);do for oZ=NN,MN do q_=q_+0X00001;Sq[oZ]=HN[q_];end;end;end;else local Gc=mT[gi[7]];(Gc[0X1])[Gc[0X2]]=Sq[gi[0X4]];end;end;end;end;end;end;end;end;end;end);do if not(cq)then if Y(Bq)=="string"then do if W(Bq,'at\116\101\109pt \116o\032\121iel\100 \097\099ro\115\115\032m\101\116\097\109\101th\111d/C%-ca\108\108\032b\111un\100ary')then return coroutine.yield();end;end;if W(Bq,"\094\046-:%d+: ")then(i)("Luraph Script:"..(KT[oq-1]or'\040\105\110\116\101\114na\108\041')..'\058 '..t(Bq),0);else i(Bq,0);end;else(i)(Bq,0X000);end;else do if Bq then if Jq~=0x1 then do return Sq[Zq](N(Sq,Zq+1,Wq));end;else return Sq[Zq]();end;elseif not(Zq)then else return N(Sq,Zq,Jq);end;end;end;end;end;if x then(x)(fT,aT);end;do return fT;end;end;elseif b1~=0X3 then Zu=Fu();else function Fu()local PX,MX,eX,iX,sX,fX,NX,kX=0X9,nil,nil,nil,nil,nil,nil,nil;local tX=({{},{},ju,nil,ju,{},nil,nil,ju});while(true)do do if PX<=0X6 then do if not(PX<=0X2)then if PX<=0X4 then if PX~=0X3 then do sX=Qu;end;do PX=0X05;end;else tX[0x5]=r();PX=0Xa;end;else if PX~=5 then(tX)[11]=B();PX=1;else do fX=B()-0xDEa8;end;PX=11;end;end;else if not(PX<=0)then if PX==1 then do tX[13]=B();end;PX=3;else do tX[12]=z();end;break;end;else do eX={};end;do PX=0X6;end;end;end;end;else if not(PX<=9)then if PX<=11 then if PX~=0x000A then NX=z();PX=0Xc;else do tX[9]=r();end;PX=7;end;else if PX==12 then kX=z()~=0x0;do PX=13;end;else for Jo=1,fX do local po=(z());local wo,Mo=nil,nil;for TT=0,0x0003 do if not(TT<=0X00001)then if TT==2 then if po==ru then wo=F(Xu(NX),B());elseif po==0X68 then do wo=q();end;elseif po==0x2e then wo=F(Xu(NX),B());elseif po==0X000017 then do wo=L();end;elseif po==0X6e then wo=q()+B();elseif po==167 then wo=F(Xu(NX),0X3);elseif po==0X0000Da then wo=L();elseif po==Vu then do wo=F(Xu(NX),q()+B());end;elseif po==70 then wo=Sl;elseif po==237 then do wo=Rl;end;elseif po==0X000FC then wo=L();end;else Mo={wo,{}};end;else if TT==0 then wo=ju;else do(eX)[Jo-0x1]=sX;end;end;end;end;MX[sX]=Mo;local Xo=(0x1);while(true)do if Xo~=0 then sX=sX+1;Xo=0;else if kX then Cu[Yu]=Mo;Yu=Yu+Qu;end;break;end;end;end;do PX=2;end;end;end;else if not(PX<=7)then do if PX==8 then do(tX)[18]=z();end;do PX=4;end;else MX={};PX=0X00000;end;end;else iX={};PX=0X008;end;end;end;end;end;(tX)[16]=z();tX[18]=B();tX[16]=B();local LX=(B());for E6=1,LX do local a6,c6,S6=nil,nil,nil;for KU=0,0X02 do if KU<=0x00000 then a6=B();else if KU~=0X00001 then S6=B();else do c6=B();end;end;end;end;for B1=a6,c6 do tX[0X00001][B1]=S6;end;end;local aX=B()-0x117CC;PX=2;local UX,FX,bX=nil,nil,(nil);repeat do if not(PX<=0X1)then do if not(PX<=0X00002)then if PX==0x3 then FX=tX[2];do PX=4;end;else bX=B()-0X14911;do break;end;end;else UX=tX[6];do PX=1;end;end;end;else if PX~=0 then for C0=0X0,aX-0X001 do do UX[C0]=Fu();end;end;PX=0X0;else do tX[14]=B();end;PX=0X03;end;end;end;until(false);for xr=0X1,bX do FX[xr]={[4]=V(),[0X7]=V(),[5]=r(),[6]=V(),[1]=z(),[2]=z(),[3]=z()};end;(tX)[3]=iX;PX=0X2;local IX=nil;repeat if not(PX<=0X0001)then if PX~=2 then IX=z();do PX=1;end;else for gd=0X00001,r()do do iX[gd]={z(),r()};end;end;PX=0X0003;end;else if PX~=0X00000 then tX[4]=v(IX,Qu,0X1)~=0;do PX=0X00;end;else tX[7]=v(IX,0X2,0x1)~=0X000;break;end;end;until(false);do tX[17]=z();end;tX[0X11]=z();do tX[10]=z();end;do(tX)[8]=r();end;do for rf=0X01,bX do local Qf=tX[2][rf];do for Qz,Lz in ipairs(m)do local Iz=(nil);local dz,Uz=j[Lz],(0X0001);repeat if Uz~=0 then Iz=Qf[dz];Uz=0;else if Iz==12 then local Ko,Jo=nil,(nil);local Po=(1);repeat if not(Po<=0X0)then do if Po~=0x0001 then if Jo then local DC=(nil);local UC=(0x001);repeat if UC==0 then DC=Jo[2];do break;end;else do(Qf)[dz]=Jo[0X00001];end;UC=0x0;end;until(false);DC[#DC+0X1]={Qf,dz};end;break;else do Ko=eX[Qf[Lz]];end;Po=0x000;end;end;else Jo=MX[Ko];do Po=0x00002;end;end;until(false);elseif Iz~=11 then else(Qf)[Lz]=rf+Qf[Lz]+1;end;break;end;until(false);end;end;end;end;do return tX;end;end;end;end;else do if b1~=0X0 then else do Yu=1;end;end;end;end;end;do nl=0;end;while nl<0X2 do if nl~=0 then Cu=ju;nl=0X02;else(tu)[1]=Cu;do nl=1;end;end;end;local y=(rawget);return iu(Zu,c,ju)(...);end)(_ENV,table.insert,7,0XC,0x5,0X00001,string,rawset,0xF,nil,next,2,coroutine.wrap,0X0000E,"b\097\110\100",string.match,string.sub,tostring,false,13,10,string.rep,assert,0X4,0,"#",string.gsub,0X59,0X19,setmetatable,string.byte,true,"\098xo\114",coroutine,0X00100,65536,11,'\098n\111\116',table.unpack,0X8,tonumber,"..",3,{45568,2490271233,342301866,1615431268,0x8e6EF3b,0XC12e01D2,115344229,3268627895,4080729516},...);
